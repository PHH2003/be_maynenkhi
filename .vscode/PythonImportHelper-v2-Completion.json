[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "BaseSettings",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "MongoClient",
        "importPath": "pymongo",
        "description": "pymongo",
        "isExtraImport": true,
        "detail": "pymongo",
        "documentation": {}
    },
    {
        "label": "errors",
        "importPath": "pymongo",
        "description": "pymongo",
        "isExtraImport": true,
        "detail": "pymongo",
        "documentation": {}
    },
    {
        "label": "certifi",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "certifi",
        "description": "certifi",
        "detail": "certifi",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "secrets",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "secrets",
        "description": "secrets",
        "detail": "secrets",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "ObjectId",
        "importPath": "bson",
        "description": "bson",
        "isExtraImport": true,
        "detail": "bson",
        "documentation": {}
    },
    {
        "label": "ObjectId",
        "importPath": "bson",
        "description": "bson",
        "isExtraImport": true,
        "detail": "bson",
        "documentation": {}
    },
    {
        "label": "ObjectId",
        "importPath": "bson",
        "description": "bson",
        "isExtraImport": true,
        "detail": "bson",
        "documentation": {}
    },
    {
        "label": "ObjectId",
        "importPath": "bson",
        "description": "bson",
        "isExtraImport": true,
        "detail": "bson",
        "documentation": {}
    },
    {
        "label": "ObjectId",
        "importPath": "bson",
        "description": "bson",
        "isExtraImport": true,
        "detail": "bson",
        "documentation": {}
    },
    {
        "label": "Auth",
        "importPath": "models.authModel",
        "description": "models.authModel",
        "isExtraImport": true,
        "detail": "models.authModel",
        "documentation": {}
    },
    {
        "label": "collection_auth",
        "importPath": "config.database",
        "description": "config.database",
        "isExtraImport": true,
        "detail": "config.database",
        "documentation": {}
    },
    {
        "label": "collection_cart",
        "importPath": "config.database",
        "description": "config.database",
        "isExtraImport": true,
        "detail": "config.database",
        "documentation": {}
    },
    {
        "label": "collection_category",
        "importPath": "config.database",
        "description": "config.database",
        "isExtraImport": true,
        "detail": "config.database",
        "documentation": {}
    },
    {
        "label": "collection_order",
        "importPath": "config.database",
        "description": "config.database",
        "isExtraImport": true,
        "detail": "config.database",
        "documentation": {}
    },
    {
        "label": "collection_product",
        "importPath": "config.database",
        "description": "config.database",
        "isExtraImport": true,
        "detail": "config.database",
        "documentation": {}
    },
    {
        "label": "list_auth",
        "importPath": "schema.authSchema",
        "description": "schema.authSchema",
        "isExtraImport": true,
        "detail": "schema.authSchema",
        "documentation": {}
    },
    {
        "label": "auth_seriral",
        "importPath": "schema.authSchema",
        "description": "schema.authSchema",
        "isExtraImport": true,
        "detail": "schema.authSchema",
        "documentation": {}
    },
    {
        "label": "pbkdf2_sha256",
        "importPath": "passlib.hash",
        "description": "passlib.hash",
        "isExtraImport": true,
        "detail": "passlib.hash",
        "documentation": {}
    },
    {
        "label": "jwt",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "smtplib,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "smtplib.",
        "description": "smtplib.",
        "detail": "smtplib.",
        "documentation": {}
    },
    {
        "label": "smtplib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "smtplib",
        "description": "smtplib",
        "detail": "smtplib",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "list_cart",
        "importPath": "schema.cartSchema",
        "description": "schema.cartSchema",
        "isExtraImport": true,
        "detail": "schema.cartSchema",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "models.cartModel",
        "description": "models.cartModel",
        "isExtraImport": true,
        "detail": "models.cartModel",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "models.categoryModel",
        "description": "models.categoryModel",
        "isExtraImport": true,
        "detail": "models.categoryModel",
        "documentation": {}
    },
    {
        "label": "list_category",
        "importPath": "schema.categorySchema",
        "description": "schema.categorySchema",
        "isExtraImport": true,
        "detail": "schema.categorySchema",
        "documentation": {}
    },
    {
        "label": "category_serial",
        "importPath": "schema.categorySchema",
        "description": "schema.categorySchema",
        "isExtraImport": true,
        "detail": "schema.categorySchema",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "models.orderModel",
        "description": "models.orderModel",
        "isExtraImport": true,
        "detail": "models.orderModel",
        "documentation": {}
    },
    {
        "label": "list_order",
        "importPath": "schema.orderSchema",
        "description": "schema.orderSchema",
        "isExtraImport": true,
        "detail": "schema.orderSchema",
        "documentation": {}
    },
    {
        "label": "cloudinary.uploader",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary.uploader",
        "description": "cloudinary.uploader",
        "detail": "cloudinary.uploader",
        "documentation": {}
    },
    {
        "label": "cloudinary",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary",
        "description": "cloudinary",
        "detail": "cloudinary",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "models.productModel",
        "description": "models.productModel",
        "isExtraImport": true,
        "detail": "models.productModel",
        "documentation": {}
    },
    {
        "label": "list_product",
        "importPath": "schema.productSchema",
        "description": "schema.productSchema",
        "isExtraImport": true,
        "detail": "schema.productSchema",
        "documentation": {}
    },
    {
        "label": "product_serial",
        "importPath": "schema.productSchema",
        "description": "schema.productSchema",
        "isExtraImport": true,
        "detail": "schema.productSchema",
        "documentation": {}
    },
    {
        "label": "jsonable_encoder",
        "importPath": "fastapi.encoders",
        "description": "fastapi.encoders",
        "isExtraImport": true,
        "detail": "fastapi.encoders",
        "documentation": {}
    },
    {
        "label": "router_order",
        "importPath": "routes.routerOrder",
        "description": "routes.routerOrder",
        "isExtraImport": true,
        "detail": "routes.routerOrder",
        "documentation": {}
    },
    {
        "label": "router_category",
        "importPath": "routes.routerCategory",
        "description": "routes.routerCategory",
        "isExtraImport": true,
        "detail": "routes.routerCategory",
        "documentation": {}
    },
    {
        "label": "router_product",
        "importPath": "routes.routerProduct",
        "description": "routes.routerProduct",
        "isExtraImport": true,
        "detail": "routes.routerProduct",
        "documentation": {}
    },
    {
        "label": "router_auth",
        "importPath": "routes.routerAuth",
        "description": "routes.routerAuth",
        "isExtraImport": true,
        "detail": "routes.routerAuth",
        "documentation": {}
    },
    {
        "label": "router_cart",
        "importPath": "routes.routerCart",
        "description": "routes.routerCart",
        "isExtraImport": true,
        "detail": "routes.routerCart",
        "documentation": {}
    },
    {
        "label": "uvicorn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uvicorn",
        "description": "uvicorn",
        "detail": "uvicorn",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "API_SECRET",
        "kind": 5,
        "importPath": "config.cloudinary",
        "description": "config.cloudinary",
        "peekOfCode": "API_SECRET = os.environ.get('API_SECRET')",
        "detail": "config.cloudinary",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "class Settings(BaseSettings):\n    DATABASE_PORT: int\n    POSTGRES_PASSWORD: str\n    POSTGRES_USER: str\n    POSTGRES_DB: str\n    POSTGRES_HOST: str\n    POSTGRES_HOSTNAME: str\n    class Config:\n        env_file = '../.env'\nsettings = Settings()",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "kind": 5,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "settings = Settings()",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "mongoUrl",
        "kind": 5,
        "importPath": "config.database",
        "description": "config.database",
        "peekOfCode": "mongoUrl = os.environ.get('BASE_URL')\ntry:\n    client = MongoClient(mongoUrl, tlsCAFile=certifi.where())\n    db = client.page_db\n    collection_category = db[\"Category\"]\n    collection_product = db[\"Product\"]\n    collection_auth = db[\"Auth\"]\n    collection_cart = db[\"Cart\"]\n    collection_order = db[\"Order\"]\nexcept errors.ConnectionError as e:",
        "detail": "config.database",
        "documentation": {}
    },
    {
        "label": "Auth",
        "kind": 6,
        "importPath": "models.authModel",
        "description": "models.authModel",
        "peekOfCode": "class Auth(BaseModel):\n    name: Optional[str] = None\n    email: str\n    password: str\n    password_reset_token: str = Field(default_factory=lambda: secrets.token_hex(16))\n    role: str = Field(default=\"USER\")\n    @classmethod\n    def as_form(\n        cls,\n        name: Optional[str] = Form(None),",
        "detail": "models.authModel",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "models.cartModel",
        "description": "models.cartModel",
        "peekOfCode": "class Cart(BaseModel):\n    quantity: float\n    productId: Optional[str] = Form(None),\n    @classmethod\n    def as_form(\n        cls,\n        quantity: float = Form(...),\n        productId: Optional[str] = Form(...)\n    ) -> 'Cart':\n        return cls(",
        "detail": "models.cartModel",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "models.categoryModel",
        "description": "models.categoryModel",
        "peekOfCode": "class Category(BaseModel):\n    name: str\n    @classmethod\n    def as_form(\n        cls,\n        name: str = Form(...),\n    ) -> 'Category':\n        return cls(name=name)",
        "detail": "models.categoryModel",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "models.orderModel",
        "description": "models.orderModel",
        "peekOfCode": "class Order(BaseModel):\n    fullName: str\n    phoneNumber: str\n    city: str\n    district: str\n    commune: str\n    detailAddress: str\n    total: float\n    productName: str\n    productPrice: float",
        "detail": "models.orderModel",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "models.productModel",
        "description": "models.productModel",
        "peekOfCode": "class Product(BaseModel):\n    name: str = Form(...),\n    price: float = Form(...),\n    quantity: int = Form(...),\n    description: str = Form(...),\n    categoryId: Optional[str] = Form(None),\n    images: List[UploadFile] = File(...)",
        "detail": "models.productModel",
        "documentation": {}
    },
    {
        "label": "create_access_token",
        "kind": 2,
        "importPath": "routes.routerAuth",
        "description": "routes.routerAuth",
        "peekOfCode": "def create_access_token(auth_id: str):\n    access_token = jwt.encode(\n        claims = {\n            \"id\": auth_id,\n            \"exp\": datetime.utcnow() + timedelta(minutes=30),\n        },\n        key = \"be-page\",\n        algorithm=\"HS256\",\n    )\n    return access_token",
        "detail": "routes.routerAuth",
        "documentation": {}
    },
    {
        "label": "router_auth",
        "kind": 5,
        "importPath": "routes.routerAuth",
        "description": "routes.routerAuth",
        "peekOfCode": "router_auth = APIRouter()\n#register\n@router_auth.post(\"/auth/register\")\nasync def register(auth:Auth = Depends(Auth.as_form)):\n    check_user = collection_auth.find_one({\"email\": auth.email})\n    if check_user:\n        raise HTTPException(status_code=400, detail=\"User da ton tai\")\n    hash_password = pbkdf2_sha256.hash(auth.password)\n    new_user = {\n        \"name\": auth.name,",
        "detail": "routes.routerAuth",
        "documentation": {}
    },
    {
        "label": "oauth2_scheme",
        "kind": 5,
        "importPath": "routes.routerAuth",
        "description": "routes.routerAuth",
        "peekOfCode": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth/login\")\n@router_auth.post(\"/auth/login\")\nasync def login(auth:Auth = Depends(Auth.as_form)):\n    check_user = collection_auth.find_one({\"email\": auth.email})\n    if not check_user:\n        raise HTTPException(status_code=401, detail=\"Tài khoản không tồn tại\")\n    hashed_password = check_user[\"password\"]\n    if not pbkdf2_sha256.verify(auth.password, hashed_password):\n        raise HTTPException(status_code=401, detail=\"Sai password\")\n    token = create_access_token(str(check_user[\"_id\"]))",
        "detail": "routes.routerAuth",
        "documentation": {}
    },
    {
        "label": "router_cart",
        "kind": 5,
        "importPath": "routes.routerCart",
        "description": "routes.routerCart",
        "peekOfCode": "router_cart = APIRouter()\n@router_cart.get(\"/cart/\")\nasync def get_all_cart():\n    carts = list_cart(collection_cart.find())\n    return carts\n@router_cart.post(\"/cart/add\")\nasync def create_cart(cart: Cart = Depends(Cart.as_form)):\n    collection_cart.insert_one(dict(cart))\n    return \"OK\"\n@router_cart.put(\"/cart/edit/{id_cart}\")",
        "detail": "routes.routerCart",
        "documentation": {}
    },
    {
        "label": "router_category",
        "kind": 5,
        "importPath": "routes.routerCategory",
        "description": "routes.routerCategory",
        "peekOfCode": "router_category = APIRouter()\n@router_category.get(\"/category/\")\nasync def get_category():\n    category = list_category(collection_category.find())\n    return category\n@router_category.get(\"/category/{id}\")\nasync def get_one_category(id:str):\n    category = category_serial(collection_category.find_one({\"_id\": ObjectId(id)}))\n    return category\n@router_category.post(\"/category/add\")",
        "detail": "routes.routerCategory",
        "documentation": {}
    },
    {
        "label": "router_order",
        "kind": 5,
        "importPath": "routes.routerOrder",
        "description": "routes.routerOrder",
        "peekOfCode": "router_order = APIRouter()\n@router_order.get(\"/order/\")\nasync def get_all_order():\n    orders = list_order(collection_order.find())\n    return orders\n@router_order.post(\"/order/add\")\nasync def create_order(order:Order = Depends(Order.as_form)):\n    collection_order.insert_one(dict(order))\n    return \"Message: OK\"\n@router_order.put(\"/order/edit/{id_order}\")",
        "detail": "routes.routerOrder",
        "documentation": {}
    },
    {
        "label": "CLOUD_NAME",
        "kind": 5,
        "importPath": "routes.routerProduct",
        "description": "routes.routerProduct",
        "peekOfCode": "CLOUD_NAME = os.getenv('CLOUD_NAME')\nAPI_KEY = os.getenv('API_KEY')\nAPI_SECRET = os.getenv('API_SECRET')\nrouter_product = APIRouter()\ncloudinary.config(\n    cloud_name= CLOUD_NAME,\n    api_key = API_KEY,\n    api_secret= API_SECRET\n)\n@router_product.post(\"/product/add\")",
        "detail": "routes.routerProduct",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "kind": 5,
        "importPath": "routes.routerProduct",
        "description": "routes.routerProduct",
        "peekOfCode": "API_KEY = os.getenv('API_KEY')\nAPI_SECRET = os.getenv('API_SECRET')\nrouter_product = APIRouter()\ncloudinary.config(\n    cloud_name= CLOUD_NAME,\n    api_key = API_KEY,\n    api_secret= API_SECRET\n)\n@router_product.post(\"/product/add\")\nasync def create_product(",
        "detail": "routes.routerProduct",
        "documentation": {}
    },
    {
        "label": "API_SECRET",
        "kind": 5,
        "importPath": "routes.routerProduct",
        "description": "routes.routerProduct",
        "peekOfCode": "API_SECRET = os.getenv('API_SECRET')\nrouter_product = APIRouter()\ncloudinary.config(\n    cloud_name= CLOUD_NAME,\n    api_key = API_KEY,\n    api_secret= API_SECRET\n)\n@router_product.post(\"/product/add\")\nasync def create_product(\n    name: str = Form(...),",
        "detail": "routes.routerProduct",
        "documentation": {}
    },
    {
        "label": "router_product",
        "kind": 5,
        "importPath": "routes.routerProduct",
        "description": "routes.routerProduct",
        "peekOfCode": "router_product = APIRouter()\ncloudinary.config(\n    cloud_name= CLOUD_NAME,\n    api_key = API_KEY,\n    api_secret= API_SECRET\n)\n@router_product.post(\"/product/add\")\nasync def create_product(\n    name: str = Form(...),\n    price: float = Form(...),",
        "detail": "routes.routerProduct",
        "documentation": {}
    },
    {
        "label": "auth_seriral",
        "kind": 2,
        "importPath": "schema.authSchema",
        "description": "schema.authSchema",
        "peekOfCode": "def auth_seriral(auth) -> dict:\n    return {\n        \"id\": str(auth[\"_id\"]),\n        \"name\": auth[\"name\"],\n        \"email\": auth[\"email\"],\n        \"password\": auth[\"password\"],\n        \"password_reset_token\": str(auth[\"password_reset_token\"]),\n        \"role\": auth[\"role\"],\n    }\ndef list_auth(auths) -> list:",
        "detail": "schema.authSchema",
        "documentation": {}
    },
    {
        "label": "list_auth",
        "kind": 2,
        "importPath": "schema.authSchema",
        "description": "schema.authSchema",
        "peekOfCode": "def list_auth(auths) -> list:\n    return [auth_seriral(auth) for auth in auths]",
        "detail": "schema.authSchema",
        "documentation": {}
    },
    {
        "label": "cart_serial",
        "kind": 2,
        "importPath": "schema.cartSchema",
        "description": "schema.cartSchema",
        "peekOfCode": "def cart_serial(cart) -> dict:\n    return{\n        \"id\": str(cart[\"_id\"]),\n        \"quantity\": cart[\"quantity\"],\n        \"productId\":cart[\"productId\"]\n    }\ndef list_cart(carts) -> list:\n    return[cart_serial(cart) for cart in carts]",
        "detail": "schema.cartSchema",
        "documentation": {}
    },
    {
        "label": "list_cart",
        "kind": 2,
        "importPath": "schema.cartSchema",
        "description": "schema.cartSchema",
        "peekOfCode": "def list_cart(carts) -> list:\n    return[cart_serial(cart) for cart in carts]",
        "detail": "schema.cartSchema",
        "documentation": {}
    },
    {
        "label": "category_serial",
        "kind": 2,
        "importPath": "schema.categorySchema",
        "description": "schema.categorySchema",
        "peekOfCode": "def category_serial(category) -> dict:\n    return {\n        \"id\": str(category[\"_id\"]),\n        \"name\": category[\"name\"]\n    }\ndef list_category(categorys) -> list:\n    return [category_serial(category) for category in categorys]",
        "detail": "schema.categorySchema",
        "documentation": {}
    },
    {
        "label": "list_category",
        "kind": 2,
        "importPath": "schema.categorySchema",
        "description": "schema.categorySchema",
        "peekOfCode": "def list_category(categorys) -> list:\n    return [category_serial(category) for category in categorys]",
        "detail": "schema.categorySchema",
        "documentation": {}
    },
    {
        "label": "order_serial",
        "kind": 2,
        "importPath": "schema.orderSchema",
        "description": "schema.orderSchema",
        "peekOfCode": "def order_serial(order) -> dict:\n    return {\n        \"id\":str(order[\"_id\"]),\n        \"fullName\": str(order[\"fullName\"]),\n        \"phoneNumber\": str(order[\"phoneNumber\"]),\n        \"city\": str(order[\"city\"]),\n        \"district\": str(order[\"district\"]),\n        \"commune\": str(order[\"commune\"]),\n        \"detailAddress\": str(order[\"detailAddress\"]),\n        \"total\": float(order[\"total\"]),",
        "detail": "schema.orderSchema",
        "documentation": {}
    },
    {
        "label": "list_order",
        "kind": 2,
        "importPath": "schema.orderSchema",
        "description": "schema.orderSchema",
        "peekOfCode": "def list_order(orders) -> list:\n    return[order_serial(order) for order in orders]",
        "detail": "schema.orderSchema",
        "documentation": {}
    },
    {
        "label": "product_serial",
        "kind": 2,
        "importPath": "schema.productSchema",
        "description": "schema.productSchema",
        "peekOfCode": "def product_serial(product) -> dict:\n    return {\n        \"id\": str(product.get(\"_id\", \"N/A\")),\n        \"name\": product.get(\"name\", \"N/A\"),\n        \"images\": product.get(\"images\", [\"N/A\"]),\n        \"price\": product.get(\"price\", \"N/A\"),\n        \"quantity\": product.get(\"quantity\", \"N/A\"),\n        \"description\": product.get(\"description\", \"N/A\"),\n        \"categoryId\": product.get(\"categoryId\", \"N/A\")\n    }",
        "detail": "schema.productSchema",
        "documentation": {}
    },
    {
        "label": "list_product",
        "kind": 2,
        "importPath": "schema.productSchema",
        "description": "schema.productSchema",
        "peekOfCode": "def list_product(products) -> list:\n    return [product_serial(product) for product in products]",
        "detail": "schema.productSchema",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\napp.include_router(router_category)\napp.include_router(router_product)\napp.include_router(router_auth)\napp.include_router(router_cart)\napp.include_router(router_order)\nallow_origins=[\"*\"]\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=allow_origins,  # Cho phép các nguồn gốc cụ thể",
        "detail": "main",
        "documentation": {}
    }
]